; file: success_n_1.smt
; generated by a call to `klee_dump_expr(.., success_n)`
(declare-fun pos () (Array (_ BitVec 32) (_ BitVec 8) ) )
; dumped expression
(define-fun |success_n_1| () (_ BitVec 32) (_ bv0 32))
; path condition under which dumped expression is valid (use in ITE)
(define-fun |path_cond_1| () Bool (bvslt  (concat  (select  pos (_ bv3 32) ) (concat  (select  pos (_ bv2 32) ) (concat  (select  pos (_ bv1 32) ) (select  pos (_ bv0 32) ) ) ) ) (_ bv4294967197 32) ))


; file: success_n_2.smt
; generated by a call to `klee_dump_expr(.., success_n)`
; dumped expression
(define-fun |success_n_2| () (_ BitVec 32) (_ bv1 32))
; path condition under which dumped expression is valid (use in ITE)
(define-fun |path_cond_2| () Bool (=  false (bvslt  (concat  (select  pos (_ bv3 32) ) (concat  (select  pos (_ bv2 32) ) (concat  (select  pos (_ bv1 32) ) (select  pos (_ bv0 32) ) ) ) ) (_ bv4294967197 32) ) ))


(define-fun |path_cond_combined| () Bool (or |path_cond_1| |path_cond_2|))

; try to find an input for which the combined path condition isn't true
(assert (not |path_cond_combined|))
(check-sat)
